# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~


# Home page
GET           /                                             controllers.Application.index

# JavaScript routes
GET           /jsroutes.js                                  controllers.JavaScript.jsRoutes()


# Ajax routes: Users
POST          /login                                        controllers.Application.login()
GET           /users/:id                                    controllers.UserController.user(id: String)
DELETE        /users/:id                                    controllers.UserController.deleteUser(id: String)
GET           /users                                        controllers.UserController.getAllUsers()
POST          /user                                         controllers.UserController.saveUser()
GET           /logout                                       controllers.Application.logout()
GET           /logout/:id                                   controllers.UserController.logout(id: String)
GET           /user/projects/:id                            controllers.UserController.getUserProjects(id: String)

# Ajax routes: Teams
POST          /team                                         controllers.TeamController.saveTeam()
GET           /teams                                        controllers.TeamController.getAllTeams()
GET           /team/:id                                     controllers.TeamController.getTeam(id: String)

# Ajax Domain Controller 
GET           /loadAutoSetupCtx/:setupType                  controllers.Application.loadAutoSetupCtx(setupType: String)
GET           /loadCtxTagData/:itemName/:idProject          controllers.Application.loadCtxTagData(itemName: String,  idProject: String)
GET           /loadCtxSentences/:confType                   controllers.Application.loadCtxSentences(confType:String)
GET           /typeDescriptor                               controllers.DomainController.typeDescriptor()

# Ajax for API controller
POST          /actionadapter                                controllers.Application.onConnectorReceived()
POST          /saveNewInspectedPage                         controllers.Application.saveNewInspectedPage()
GET           /repository/swing/:apiKey                     controllers.Application.loadWikifiedRepository(apiKey: String)
GET           /repository/web/:apiKey                       controllers.Application.loadWebWikifiedRepository(apiKey: String)
GET           /loadServiceDescriptors/:sType/:driver        controllers.Application.loadServiceDescriptors(sType:String, driver: String)
GET           /loadSentences/:confType                      controllers.Application.loadSentences(confType:String)
POST          /saveNewInspectedScenario                     controllers.Application.saveNewInspectedScenario()

# Ajax routes: Agent API Controller
POST          /susbcribe                                    controllers.AgentController.subscribe()
GET           /socket/stream                                controllers.AgentController.registerFrontWebsocketService(token: Option[String])
POST          /record                                       controllers.AgentController.publishRecordedAction()
GET           /agent/:userToken                             controllers.AgentController.getAgents(userToken: String)

# Ajax routes: Configuration Controller
GET           /loadConfiguration                            controllers.ConfigurationController.loadConfiguration()
POST          /saveConfiguration                            controllers.ConfigurationController.saveConfiguration()

# Ajax routes: Repository Controller
GET           /loadAutoConfiguration/:idProject             controllers.RepositoryController.loadAutoConfiguration(idProject: String)
GET           /loadWebPageRepository/:idProject             controllers.RepositoryController.loadWebPageRepository(idProject: String)
POST          /saveAutoSetupConfiguration                   controllers.RepositoryController.saveAutoConfig()
POST          /saveAutoConfigBlock                          controllers.RepositoryController.saveAutoConfigBlock()
GET           /loadRepository                               controllers.RepositoryController.loadRepository()
POST          /saveRepository                               controllers.RepositoryController.saveRepository()
POST          /deleteObject                                 controllers.RepositoryController.deleteObject()

# Ajax routes: Scenarii Controller
GET           /loadScenariiList/:idProject                  controllers.ScenarioController.loadScenariiList(idProject: String)
GET           /loadScenarii/:idProject                      controllers.ScenarioController.loadScenarii(idProject: String)
GET           /scenario/wiki/:apiKey                        controllers.ScenarioController.loadWikifiedScenarii(apiKey: String)
GET           /loadScenarioSteps/:id                        controllers.ScenarioController.loadScenarioSteps(id: String)
GET           /loadScenarioCtx/:scenarioType                controllers.ScenarioController.loadScenarioCtx(scenarioType: String)
POST          /saveScenarii                                 controllers.ScenarioController.saveScenarii()
POST          /deleteScenarii                               controllers.ScenarioController.deleteScenarii()

# Ajax routes: Test Plan Controller
POST          /saveProject                                  controllers.TestPlanController.saveProject()
GET           /testplan/all/:idProject                      controllers.TestPlanController.loadProject(idProject: String)
GET           /testplan/setup/:idTestPlan                   controllers.TestPlanController.loadTestPlanSetup(idTestPlan: String)
GET           /testplan/report/*testPlanName                controllers.TestPlanController.loadProjectReport(testPlanName:String)
GET           /test                                         controllers.TestPlanController.loadTestReport()

# Ajax routes: Project Controller
POST          /project                                      controllers.ProjectController.saveProject()
GET           /projects/:idProject                          controllers.ProjectController.getProject(idProject: String)
GET           /projects                                     controllers.ProjectController.getAllProjects()

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                 controllers.Assets.at(path="/public", file)

# Map the webjar static assets to the /webjars URL
GET           /webjars/*file                                controllers.WebJarAssets.at(file)

